{
    "sourceFile": "screens/EditarVaga.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1717781313304,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1717781322850,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n   Pressable,\r\n   Alert,\r\n   StyleSheet,\r\n   Text,\r\n-  Image\r\n+  Image,\r\n } from \"react-native\";\r\n import { FontAwesome } from \"@expo/vector-icons\"; \r\n import { RFValue } from \"react-native-responsive-fontsize\";\r\n \r\n@@ -75,9 +75,12 @@\n \r\n   return (\r\n     <View style={styles.container}>\r\n       <Pressable style={styles.voltarSeta} onPress={() => navigation.goBack()}>\r\n-        <FontAwesome name=\"arrow-left\" size={30} color=\"black\" />\r\n+      <Image\r\n+          source={require('./../assets/icons/users-solid.png')}\r\n+          style={{ width: 30, height: 30 }}\r\n+        />\r\n       </Pressable>\r\n \r\n       <View style={styles.containerForm}>\r\n         <Text style={styles.headerText}>Editar vaga</Text>\r\n"
                }
            ],
            "date": 1717781313304,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  View,\r\n  TextInput,\r\n  Pressable,\r\n  Alert,\r\n  StyleSheet,\r\n  Text,\r\n  Image\r\n} from \"react-native\";\r\nimport { FontAwesome } from \"@expo/vector-icons\"; \r\nimport { RFValue } from \"react-native-responsive-fontsize\";\r\n\r\nconst EditarVaga = ({ route, navigation }) => {\r\n  const { vaga } = route.params;\r\n\r\n  const local = `http://10.110.12.19:8080/vagas/editar/${vaga.id_vaga}`;\r\n  const nuvem = `https://appbackend1.azurewebsites.net/vagas/editar/${vaga.id_vaga}`;\r\n\r\n  const [imagemVagaEdt, setImagemVagaEdt] = useState(\"\");\r\n  const [areaVagaEdt, setAreaVagaEdt] = useState(\"\");\r\n  const [nomeVagaEdt, setNomeVagaEdt] = useState(\"\");\r\n  const [descricaoVagaEdt, setDescricaoVagaEdt] = useState(\"\");\r\n  const [requisitosVagaEdt, setRequisitosVagaEdt] = useState(\"\");\r\n  const [cargaHorariaVagaEdt, setCargaHorariaVagaEdt] = useState(\"\");\r\n  const [salarioVagaEdt, setSalarioVagaEdt] = useState(\"\");\r\n  const [contatoVagaEdt, setContatoVagaEdt] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setImagemVagaEdt(vaga.imagem_vaga)\r\n    setAreaVagaEdt(vaga.area_vaga);\r\n    setNomeVagaEdt(vaga.nome_vaga);\r\n    setDescricaoVagaEdt(vaga.desc_vaga);\r\n    setRequisitosVagaEdt(vaga.requisitos_vaga);\r\n    setCargaHorariaVagaEdt(vaga.carga_vaga);\r\n    setSalarioVagaEdt(vaga.salario_vaga);\r\n    setContatoVagaEdt(vaga.contato_vaga);\r\n  }, []);\r\n\r\n  const salvarEdicao = () => {\r\n    const vagaEditada = {\r\n      imagem_vaga: imagemVagaEdt,\r\n      area_vaga: areaVagaEdt,\r\n      nome_vaga: nomeVagaEdt,\r\n      desc_vaga: descricaoVagaEdt,\r\n      requisitos_vaga: requisitosVagaEdt,\r\n      carga_vaga: cargaHorariaVagaEdt,\r\n      salario_vaga: salarioVagaEdt,\r\n      contato_vaga: contatoVagaEdt,\r\n    };\r\n\r\n    fetch(nuvem, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(vagaEditada),\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          Alert.alert(\"Sucesso\", \"Vaga editada com sucesso. Por favor atualize a tela de vagas para vizualizar as alterações.\");\r\n          navigation.navigate('TelaVagas');\r\n        } else {\r\n          throw new Error(\"Erro ao editar vaga\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Erro ao editar vaga:\", error);\r\n        Alert.alert(\r\n          \"Erro\",\r\n          \"Erro ao editar vaga. Por favor, tente novamente mais tarde.\"\r\n        );\r\n      });\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Pressable style={styles.voltarSeta} onPress={() => navigation.goBack()}>\r\n        <FontAwesome name=\"arrow-left\" size={30} color=\"black\" />\r\n      </Pressable>\r\n\r\n      <View style={styles.containerForm}>\r\n        <Text style={styles.headerText}>Editar vaga</Text>\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Endereço de imagem (Logo da empresa)\"\r\n          placeholderTextColor=\"gray\"\r\n          value={imagemVagaEdt}\r\n          onChangeText={(text) => setImagemVagaEdt(text)}\r\n        />\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Área da Vaga* Ex: TI, Mecânica\"\r\n          placeholderTextColor=\"gray\"\r\n          value={areaVagaEdt}\r\n          onChangeText={(text) => setAreaVagaEdt(text)}\r\n        />\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Nome da Vaga*\"\r\n          placeholderTextColor=\"gray\"\r\n          value={nomeVagaEdt}\r\n          onChangeText={(text) => setNomeVagaEdt(text)}\r\n        />\r\n        <TextInput\r\n          style={[styles.input, styles.textArea]}\r\n          placeholder=\"Descrição da Vaga*\"\r\n          placeholderTextColor=\"gray\"\r\n          value={descricaoVagaEdt}\r\n          multiline\r\n          numberOfLines={4}\r\n          onChangeText={(text) => setDescricaoVagaEdt(text)}\r\n        />\r\n        <TextInput\r\n          style={[styles.input, styles.textArea]}\r\n          placeholder=\"Requisitos da Vaga*\"\r\n          placeholderTextColor=\"gray\"\r\n          value={requisitosVagaEdt}\r\n          multiline\r\n          numberOfLines={4}\r\n          onChangeText={(text) => setRequisitosVagaEdt(text)}\r\n        />\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Carga Horária*\"\r\n          placeholderTextColor=\"gray\"\r\n          value={cargaHorariaVagaEdt}\r\n          onChangeText={(text) => setCargaHorariaVagaEdt(text)}\r\n        />\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Salário\"\r\n          placeholderTextColor=\"gray\"\r\n          value={salarioVagaEdt}\r\n          onChangeText={(text) => setSalarioVagaEdt(text)}\r\n        />\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Contato da Vaga*\"\r\n          placeholderTextColor=\"gray\"\r\n          value={contatoVagaEdt}\r\n          onChangeText={(text) => setContatoVagaEdt(text)}\r\n        />\r\n        <View style={styles.containerBtnForm}>\r\n          <Pressable style={styles.btnEditar} onPress={salvarEdicao}>\r\n            <Text style={styles.buttonText}>Salvar alterações</Text>\r\n          </Pressable>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: \"#E8E8E8\",\r\n    flex: 1,\r\n    padding: 20,\r\n  },\r\n  containerForm: {\r\n    verticalAlign: \"middle\",\r\n    marginTop: 20,\r\n    padding: 10,\r\n    borderRadius: 10,\r\n    backgroundColor: \"#ffffff\",\r\n  },\r\n  containerBtnForm: {\r\n    alignItems: \"flex-end\",\r\n  },\r\n  voltarSeta: {\r\n    marginTop: 40,\r\n  },\r\n  input: {\r\n    height: 40,\r\n    borderColor: \"#E8E8E8\",\r\n    borderWidth: 2,\r\n    borderRadius: 8,\r\n    marginBottom: 10,\r\n    paddingHorizontal: 10,\r\n  },\r\n  textArea: {\r\n    height: 100,\r\n  },\r\n  btnEditar: {\r\n    backgroundColor: \"#ff0000\",\r\n    borderRadius: 10,\r\n    alignItems: \"center\",\r\n  },\r\n  buttonText: {\r\n    padding: 10,\r\n    color: \"#fff\",\r\n    fontSize: RFValue(16),\r\n    fontWeight: \"bold\",\r\n  },\r\n  header: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginBottom: 20,\r\n  },\r\n  headerText: {\r\n    fontSize: RFValue(20),\r\n    fontWeight: \"bold\",\r\n    marginBottom: 20,\r\n  },\r\n  seta: {\r\n    width: 30,\r\n    height: 30,\r\n    marginRight: 10,\r\n  },\r\n});\r\n\r\nexport default EditarVaga;\r\n"
        }
    ]
}