{
    "sourceFile": "screens/CadastroAdmin.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1717781616548,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1717781626171,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,9 +64,12 @@\n \r\n   return (\r\n     <View style={styles.container}>\r\n       <Pressable style={styles.voltarSeta} onPress={() => navigation.goBack()}>\r\n-        <FontAwesome name=\"arrow-left\" size={30} color=\"black\" />\r\n+      <Image\r\n+          source={require('./../assets/icons/users-solid.png')}\r\n+          style={{ width: 30, height: 30 }}\r\n+        />\r\n       </Pressable>\r\n \r\n       <View style={styles.containerForm}>\r\n         <Text style={styles.headerText}>Cadastrar novo administrador</Text>\r\n"
                }
            ],
            "date": 1717781616548,
            "name": "Commit-0",
            "content": "// Tela que possibilita ao administrador responsável  que permita a outros colaboradores o acesso\r\n// a versão de administrador do GEO SENAI \r\n\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  View,\r\n  TextInput,\r\n  Pressable,\r\n  Alert,\r\n  StyleSheet,\r\n  Text,\r\n  Image,\r\n} from \"react-native\";\r\nimport { FontAwesome } from \"@expo/vector-icons\"; \r\nimport { RFValue } from \"react-native-responsive-fontsize\";\r\n\r\nconst CadastroAdmin = ({ navigation }) => {\r\n  const [usuario, setUsuario] = useState(\"\");\r\n  const [senha1, setSenha1] = useState(\"\");\r\n  const [senha2, setSenha2] = useState(\"\");\r\n\r\n  const local = \"http://10.110.12.19:8080/admin/cadastrar\";\r\n  const nuvem = \"https://appbackend1.azurewebsites.net/admin/cadastrar\";\r\n\r\n  const enviarDados = () => {\r\n    // Valide os campos, se necessário\r\n    if (usuario.trim() === \"\" || senha1.trim() === \"\" || senha2.trim() === \"\") {\r\n      Alert.alert(\"Erro\", \"Por favor, preencha todos os campos\");\r\n    } else if (senha1 === senha2) {\r\n      // Criar objeto de administrador com os dados\r\n      const novoAdmin = {\r\n        usuarioAdmin: usuario,\r\n        senhaAdmin: senha1,\r\n      };\r\n\r\n      // Enviar os dados para o backend\r\n      fetch(nuvem, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(novoAdmin),\r\n      })\r\n        .then((response) => {\r\n          if (response.ok) {\r\n            // Turma adicionada com sucesso, fazer algo, se necessário\r\n            Alert.alert(\"Sucesso\", \"Novo administrador cadastrado com sucesso.\");\r\n            navigation.navigate(\"TelaInicial\");\r\n          } else {\r\n            throw new Error(\"Erro ao efetuar cadastro\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Erro ao efetuar cadastro:\", error);\r\n          Alert.alert(\r\n            \"Erro\",\r\n            \"Erro ao efetuar cadastro. Por favor, tente novamente mais tarde.\"\r\n          );\r\n        });\r\n    } else {\r\n      Alert.alert(\"Erro\", \"As senhas não coincidem\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Pressable style={styles.voltarSeta} onPress={() => navigation.goBack()}>\r\n        <FontAwesome name=\"arrow-left\" size={30} color=\"black\" />\r\n      </Pressable>\r\n\r\n      <View style={styles.containerForm}>\r\n        <Text style={styles.headerText}>Cadastrar novo administrador</Text>\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Usuário\"\r\n          placeholderTextColor=\"gray\"\r\n          value={usuario}\r\n          onChangeText={(text) => setUsuario(text)}\r\n        />\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Senha\"\r\n          placeholderTextColor=\"gray\"\r\n          value={senha1}\r\n          onChangeText={(text) => setSenha1(text)}\r\n        />\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Confirmar senha\"\r\n          placeholderTextColor=\"gray\"\r\n          value={senha2}\r\n          onChangeText={(text) => setSenha2(text)}\r\n        />\r\n        <View style={styles.containerBtnForm}>\r\n          <Pressable style={styles.btnPublicar} onPress={enviarDados}>\r\n            <Text style={styles.buttonText}>Cadastrar</Text>\r\n          </Pressable>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: \"#E8E8E8\",\r\n    flex: 1,\r\n    padding: 20,\r\n  },\r\n  containerForm: {\r\n    marginTop: 20,\r\n    padding: 10,\r\n    borderRadius: 10,\r\n    backgroundColor: \"#ffffff\",\r\n    alignItems: \"center\", // Corrige o alinhamento vertical\r\n  },\r\n  containerBtnForm: {\r\n    alignItems: \"flex-end\",\r\n  },\r\n  voltarSeta: {\r\n    marginTop: 40,\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    height: 40,\r\n    borderColor: \"#E8E8E8\", \r\n    borderWidth: 2, \r\n    borderRadius: 8, \r\n    marginBottom: 10,\r\n    paddingHorizontal: 10,\r\n  },\r\n  textArea: {\r\n    height: 100,\r\n  },\r\n  btnPublicar: {\r\n    backgroundColor: \"#ff0000\",\r\n    borderRadius: 10,\r\n    alignItems: \"center\",\r\n  },\r\n  buttonText: {\r\n    color: \"#fff\",\r\n    fontSize:RFValue(16),\r\n    fontWeight: \"bold\",\r\n    padding: 10\r\n  },\r\n  header: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginBottom: 20,\r\n  },\r\n  headerText: {\r\n    fontSize: RFValue(20),\r\n    fontWeight: \"bold\",\r\n    marginBottom: 20,\r\n  },\r\n  seta: {\r\n    width: 30,\r\n    height: 30,\r\n    marginRight: 10,\r\n  },\r\n});\r\n\r\nexport default CadastroAdmin;\r\n"
        }
    ]
}