{
    "sourceFile": "screens/TelaVagas.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 6,
            "patches": [
                {
                    "date": 1717781238584,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1717781254789,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,11 +5,10 @@\n   View,\r\n   Pressable,\r\n   ScrollView,\r\n   Modal,\r\n-  Button,\r\n   Alert,\r\n-  Image\r\n+  Image,\r\n } from \"react-native\";\r\n import { FontAwesome } from \"@expo/vector-icons\";\r\n import { RFValue } from \"react-native-responsive-fontsize\";\r\n \r\n@@ -78,9 +77,12 @@\n         <Pressable\r\n           onPress={() => navigation.goBack()}\r\n           style={styles.backButton}\r\n         >\r\n-          <FontAwesome name=\"arrow-left\" size={24} color=\"black\" />\r\n+                  <Image\r\n+          source={require('./../assets/icons/users-solid.png')}\r\n+          style={{ width: 30, height: 30 }}\r\n+        />\r\n         </Pressable>\r\n       </View>\r\n \r\n       <View>\r\n"
                },
                {
                    "date": 1717781260777,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import React, { useState, useEffect } from \"react\";\r\n+import React, { useState, useEffect } from 'react'\r\n import {\r\n   StyleSheet,\r\n   Text,\r\n   View,\r\n@@ -7,82 +7,80 @@\n   ScrollView,\r\n   Modal,\r\n   Alert,\r\n   Image,\r\n-} from \"react-native\";\r\n-import { FontAwesome } from \"@expo/vector-icons\";\r\n-import { RFValue } from \"react-native-responsive-fontsize\";\r\n+} from 'react-native'\r\n+import { FontAwesome } from '@expo/vector-icons'\r\n+import { RFValue } from 'react-native-responsive-fontsize'\r\n \r\n const TelaVagas = ({ navigation }) => {\r\n-  const [vagas, setVagas] = useState([]);\r\n-  const [modalVisible, setModalVisible] = useState(false);\r\n+  const [vagas, setVagas] = useState([])\r\n+  const [modalVisible, setModalVisible] = useState(false)\r\n \r\n-  const local = \"http://10.110.12.19:8080/vagas\";\r\n-  const nuvem = \"https://appbackend1.azurewebsites.net/vagas\";\r\n+  const local = 'http://10.110.12.19:8080/vagas'\r\n+  const nuvem = 'https://appbackend1.azurewebsites.net/vagas'\r\n \r\n-  const localD = \"http://10.110.12.19:8080/vagas/deletar/all\";\r\n-  const nuvemD = \"https://appbackend1.azurewebsites.net/vagas/deletar/all\";\r\n+  const localD = 'http://10.110.12.19:8080/vagas/deletar/all'\r\n+  const nuvemD = 'https://appbackend1.azurewebsites.net/vagas/deletar/all'\r\n \r\n   const botaoMais = () => {\r\n-    navigation.navigate(\"CadastroVaga\");\r\n-  };\r\n+    navigation.navigate('CadastroVaga')\r\n+  }\r\n \r\n   const atualizarVagas = () => {\r\n     fetch(nuvem, {\r\n-      method: \"GET\",\r\n+      method: 'GET',\r\n       headers: {\r\n-        Accept: \"application/json\",\r\n-        \"Content-Type\": \"application/json\",\r\n+        Accept: 'application/json',\r\n+        'Content-Type': 'application/json',\r\n       },\r\n     })\r\n       .then((response) => response.json())\r\n       .then((data) => setVagas(data))\r\n-      .catch((error) => console.error(\"Erro ao obter vagas:\", error));\r\n-  };\r\n+      .catch((error) => console.error('Erro ao obter vagas:', error))\r\n+  }\r\n \r\n   const toggleModal = () => {\r\n-    setModalVisible(!modalVisible);\r\n-  };\r\n+    setModalVisible(!modalVisible)\r\n+  }\r\n \r\n   const excluiTudo = async () => {\r\n-    setModalVisible(false);\r\n+    setModalVisible(false)\r\n \r\n     try {\r\n-      const response = await fetch(nuvemD,\r\n-        {\r\n-          method: \"DELETE\",\r\n-          headers: {\r\n-            \"Content-Type\": \"application/json\",\r\n-          },\r\n-        }\r\n-      );\r\n+      const response = await fetch(nuvemD, {\r\n+        method: 'DELETE',\r\n+        headers: {\r\n+          'Content-Type': 'application/json',\r\n+        },\r\n+      })\r\n \r\n       if (response.ok) {\r\n-        Alert.alert(\"Sucesso na exclusão.\");\r\n+        Alert.alert('Sucesso na exclusão.')\r\n       } else {\r\n-        Alert.alert(\"Erro ao excluir vagas\");\r\n+        Alert.alert('Erro ao excluir vagas')\r\n       }\r\n     } catch (error) {\r\n-      console.error(\"Erro ao excluir vagas:\", error);\r\n-      Alert.alert(\"Erro ao excluir vagas. Verifique sua conexão de internet.\");\r\n+      console.error('Erro ao excluir vagas:', error)\r\n+      Alert.alert('Erro ao excluir vagas. Verifique sua conexão de internet.')\r\n     }\r\n-  };\r\n+  }\r\n \r\n   useEffect(() => {\r\n-    atualizarVagas();\r\n-  }, []);\r\n+    atualizarVagas()\r\n+  }, [])\r\n \r\n   return (\r\n     <View style={styles.container}>\r\n       <View style={styles.header}>\r\n         <Pressable\r\n           onPress={() => navigation.goBack()}\r\n           style={styles.backButton}\r\n         >\r\n-                  <Image\r\n-          source={require('./../assets/icons/users-solid.png')}\r\n-          style={{ width: 30, height: 30 }}\r\n-        />\r\n+          <Image\r\n+            source={require('./../assets/icons/arrow-left-solid.png')}\r\n+            style={{ width: 30, height: 30 }}\r\n+          />\r\n         </Pressable>\r\n       </View>\r\n \r\n       <View>\r\n@@ -95,9 +93,9 @@\n             <Pressable\r\n               key={vaga.id}\r\n               style={styles.ButtonVagas}\r\n               onPress={() =>\r\n-                navigation.navigate(\"InformacoesVaga\", { vaga: vaga })\r\n+                navigation.navigate('InformacoesVaga', { vaga: vaga })\r\n               }\r\n             >\r\n               <Text style={styles.buttonText}>\r\n                 Área: {vaga.area_vaga} - Empresa: {vaga.nome_vaga}\r\n@@ -123,117 +121,123 @@\n         animationType=\"slide\"\r\n         transparent={true}\r\n         visible={modalVisible}\r\n         onRequestClose={() => {\r\n-          setModalVisible(!modalVisible);\r\n+          setModalVisible(!modalVisible)\r\n         }}\r\n       >\r\n         <View style={styles.centeredView}>\r\n           <View style={styles.modalView}>\r\n             <Text style={styles.modalText}>Confirma a exclusão?</Text>\r\n             <View style={styles.buttonsContainer}>\r\n-              <Pressable style={[styles.botoesModalCancelar]} onPress={toggleModal}>\r\n+              <Pressable\r\n+                style={[styles.botoesModalCancelar]}\r\n+                onPress={toggleModal}\r\n+              >\r\n                 <Text style={styles.texto}>Cancelar</Text>\r\n               </Pressable>\r\n-              <Pressable style={[styles.botoesModalConfirmar]} onPress={excluiTudo}>\r\n+              <Pressable\r\n+                style={[styles.botoesModalConfirmar]}\r\n+                onPress={excluiTudo}\r\n+              >\r\n                 <Text style={styles.texto}>Confirmar</Text>\r\n               </Pressable>\r\n             </View>\r\n           </View>\r\n         </View>\r\n       </Modal>\r\n     </View>\r\n-  );\r\n-};\r\n+  )\r\n+}\r\n \r\n const styles = StyleSheet.create({\r\n   container: {\r\n     flex: 1,\r\n-    backgroundColor: \"#E8E8E8\",\r\n+    backgroundColor: '#E8E8E8',\r\n     padding: 20,\r\n   },\r\n   header: {\r\n-    flexDirection: \"row\",\r\n-    alignItems: \"center\",\r\n+    flexDirection: 'row',\r\n+    alignItems: 'center',\r\n     marginBottom: 20,\r\n   },\r\n   backButton: {\r\n     marginTop: 40,\r\n     marginRight: 10,\r\n   },\r\n   headerTitle: {\r\n-    textAlign: \"center\",\r\n-    color: \"black\",\r\n+    textAlign: 'center',\r\n+    color: 'black',\r\n     fontSize: 25,\r\n-    fontWeight: \"bold\",\r\n+    fontWeight: 'bold',\r\n   },\r\n   scrollContainer: {\r\n     flexGrow: 1,\r\n   },\r\n   Buttons: {\r\n     borderRadius: 10,\r\n-    alignItems: \"center\",\r\n+    alignItems: 'center',\r\n     marginTop: 20,\r\n   },\r\n   ButtonVagas: {\r\n-    backgroundColor: \"#ff0000\",\r\n+    backgroundColor: '#ff0000',\r\n     padding: 20,\r\n     marginBottom: 10,\r\n-    alignItems: \"center\",\r\n-    width: \"80%\",\r\n+    alignItems: 'center',\r\n+    width: '80%',\r\n   },\r\n   ButtonExcluiTudo: {\r\n-    position: \"absolute\",\r\n+    position: 'absolute',\r\n     bottom: 20,\r\n     left: 20,\r\n-    backgroundColor: \"black\",\r\n+    backgroundColor: 'black',\r\n     width: 150,\r\n     height: 50,\r\n     borderRadius: 25,\r\n-    justifyContent: \"center\",\r\n-    alignItems: \"center\",\r\n+    justifyContent: 'center',\r\n+    alignItems: 'center',\r\n   },\r\n   buttonText: {\r\n-    color: \"#fff\",\r\n-    fontSize:RFValue (14),\r\n-    fontWeight: \"bold\",\r\n+    color: '#fff',\r\n+    fontSize: RFValue(14),\r\n+    fontWeight: 'bold',\r\n   },\r\n   addButton: {\r\n-    position: \"absolute\",\r\n+    position: 'absolute',\r\n     bottom: 20,\r\n     right: 20,\r\n-    backgroundColor: \"black\",\r\n+    backgroundColor: 'black',\r\n     width: 50,\r\n     height: 50,\r\n     borderRadius: 25,\r\n-    justifyContent: \"center\",\r\n-    alignItems: \"center\",\r\n+    justifyContent: 'center',\r\n+    alignItems: 'center',\r\n   },\r\n   updateButton: {\r\n-    position: \"absolute\",\r\n+    position: 'absolute',\r\n     bottom: 20,\r\n     right: 90,\r\n-    backgroundColor: \"black\",\r\n+    backgroundColor: 'black',\r\n     width: 50,\r\n     height: 50,\r\n     borderRadius: 25,\r\n-    justifyContent: \"center\",\r\n-    alignItems: \"center\",\r\n+    justifyContent: 'center',\r\n+    alignItems: 'center',\r\n   },\r\n   centeredView: {\r\n     flex: 1,\r\n-    justifyContent: \"center\",\r\n-    alignItems: \"center\",\r\n+    justifyContent: 'center',\r\n+    alignItems: 'center',\r\n     marginTop: 22,\r\n   },\r\n   modalView: {\r\n     margin: 20,\r\n-    backgroundColor: \"white\",\r\n+    backgroundColor: 'white',\r\n     borderWidth: 2,\r\n     borderRadius: 20,\r\n     padding: 35,\r\n-    alignItems: \"center\",\r\n-    shadowColor: \"#000\",\r\n+    alignItems: 'center',\r\n+    shadowColor: '#000',\r\n     shadowOffset: {\r\n       width: 0,\r\n       height: 2,\r\n     },\r\n@@ -242,35 +246,34 @@\n     elevation: 5,\r\n   },\r\n   modalText: {\r\n     marginBottom: 15,\r\n-    textAlign: \"center\",\r\n-    color: \"red\",\r\n-    fontWeight: \"bold\",\r\n+    textAlign: 'center',\r\n+    color: 'red',\r\n+    fontWeight: 'bold',\r\n   },\r\n   buttonsContainer: {\r\n-    flexDirection: \"row\",\r\n-    justifyContent: \"space-around\",\r\n-    width: \"100%\",\r\n+    flexDirection: 'row',\r\n+    justifyContent: 'space-around',\r\n+    width: '100%',\r\n   },\r\n   botoesModalCancelar: {\r\n     borderRadius: 10,\r\n-    backgroundColor: \"#4287f5\",\r\n+    backgroundColor: '#4287f5',\r\n     alignItems: 'center',\r\n     margin: 5,\r\n   },\r\n   botoesModalConfirmar: {\r\n     margin: 5,\r\n     borderRadius: 10,\r\n-    backgroundColor: \"red\",\r\n+    backgroundColor: 'red',\r\n     alignItems: 'center',\r\n   },\r\n   texto: {\r\n-    padding: 7  ,\r\n+    padding: 7,\r\n     fontWeight: 'bold',\r\n     fontSize: RFValue(18),\r\n     color: 'white',\r\n   },\r\n+})\r\n \r\n-});\r\n-\r\n-export default TelaVagas;\r\n+export default TelaVagas\r\n"
                },
                {
                    "date": 1717781275829,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,9 +77,9 @@\n           style={styles.backButton}\r\n         >\r\n           <Image\r\n             source={require('./../assets/icons/arrow-left-solid.png')}\r\n-            style={{ width: 30, height: 30 }}\r\n+            style={{ width: 24, height: 24 }}\r\n           />\r\n         </Pressable>\r\n       </View>\r\n \r\n@@ -109,9 +109,12 @@\n         <Text style={styles.buttonText}>Excluir tudo</Text>\r\n       </Pressable>\r\n \r\n       <Pressable style={styles.addButton} onPress={botaoMais}>\r\n-        <FontAwesome name=\"plus\" size={24} color=\"white\" />\r\n+      <Image\r\n+          source={require('./../assets/icons/users-solid.png')}\r\n+          style={{ width: 30, height: 30 }}\r\n+        />\r\n       </Pressable>\r\n \r\n       <Pressable style={styles.updateButton} onPress={atualizarVagas}>\r\n         <FontAwesome name=\"refresh\" size={24} color=\"white\" />\r\n"
                },
                {
                    "date": 1717781281575,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -110,10 +110,10 @@\n       </Pressable>\r\n \r\n       <Pressable style={styles.addButton} onPress={botaoMais}>\r\n       <Image\r\n-          source={require('./../assets/icons/users-solid.png')}\r\n-          style={{ width: 30, height: 30 }}\r\n+          source={require('./../assets/icons/plus-solid.png')}\r\n+          style={{ width: 24, height: 24 }}\r\n         />\r\n       </Pressable>\r\n \r\n       <Pressable style={styles.updateButton} onPress={atualizarVagas}>\r\n"
                },
                {
                    "date": 1717781294114,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -109,16 +109,19 @@\n         <Text style={styles.buttonText}>Excluir tudo</Text>\r\n       </Pressable>\r\n \r\n       <Pressable style={styles.addButton} onPress={botaoMais}>\r\n-      <Image\r\n+        <Image\r\n           source={require('./../assets/icons/plus-solid.png')}\r\n           style={{ width: 24, height: 24 }}\r\n         />\r\n       </Pressable>\r\n \r\n       <Pressable style={styles.updateButton} onPress={atualizarVagas}>\r\n-        <FontAwesome name=\"refresh\" size={24} color=\"white\" />\r\n+      <Image\r\n+          source={require('./../assets/icons/users-solid.png')}\r\n+          style={{ width: 30, height: 30 }}\r\n+        />\r\n       </Pressable>\r\n \r\n       <Modal\r\n         animationType=\"slide\"\r\n"
                },
                {
                    "date": 1717781301854,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -117,10 +117,10 @@\n       </Pressable>\r\n \r\n       <Pressable style={styles.updateButton} onPress={atualizarVagas}>\r\n       <Image\r\n-          source={require('./../assets/icons/users-solid.png')}\r\n-          style={{ width: 30, height: 30 }}\r\n+          source={require('./../assets/icons/arrows-rotate-solid.png')}\r\n+          style={{ width: 24, height: 24 }}\r\n         />\r\n       </Pressable>\r\n \r\n       <Modal\r\n"
                }
            ],
            "date": 1717781238584,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Pressable,\r\n  ScrollView,\r\n  Modal,\r\n  Button,\r\n  Alert,\r\n  Image\r\n} from \"react-native\";\r\nimport { FontAwesome } from \"@expo/vector-icons\";\r\nimport { RFValue } from \"react-native-responsive-fontsize\";\r\n\r\nconst TelaVagas = ({ navigation }) => {\r\n  const [vagas, setVagas] = useState([]);\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n\r\n  const local = \"http://10.110.12.19:8080/vagas\";\r\n  const nuvem = \"https://appbackend1.azurewebsites.net/vagas\";\r\n\r\n  const localD = \"http://10.110.12.19:8080/vagas/deletar/all\";\r\n  const nuvemD = \"https://appbackend1.azurewebsites.net/vagas/deletar/all\";\r\n\r\n  const botaoMais = () => {\r\n    navigation.navigate(\"CadastroVaga\");\r\n  };\r\n\r\n  const atualizarVagas = () => {\r\n    fetch(nuvem, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => setVagas(data))\r\n      .catch((error) => console.error(\"Erro ao obter vagas:\", error));\r\n  };\r\n\r\n  const toggleModal = () => {\r\n    setModalVisible(!modalVisible);\r\n  };\r\n\r\n  const excluiTudo = async () => {\r\n    setModalVisible(false);\r\n\r\n    try {\r\n      const response = await fetch(nuvemD,\r\n        {\r\n          method: \"DELETE\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      if (response.ok) {\r\n        Alert.alert(\"Sucesso na exclusão.\");\r\n      } else {\r\n        Alert.alert(\"Erro ao excluir vagas\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Erro ao excluir vagas:\", error);\r\n      Alert.alert(\"Erro ao excluir vagas. Verifique sua conexão de internet.\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    atualizarVagas();\r\n  }, []);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.header}>\r\n        <Pressable\r\n          onPress={() => navigation.goBack()}\r\n          style={styles.backButton}\r\n        >\r\n          <FontAwesome name=\"arrow-left\" size={24} color=\"black\" />\r\n        </Pressable>\r\n      </View>\r\n\r\n      <View>\r\n        <Text style={styles.headerTitle}>Vagas de Emprego</Text>\r\n      </View>\r\n\r\n      <ScrollView contentContainerStyle={styles.scrollContainer}>\r\n        <View style={styles.Buttons}>\r\n          {vagas.map((vaga) => (\r\n            <Pressable\r\n              key={vaga.id}\r\n              style={styles.ButtonVagas}\r\n              onPress={() =>\r\n                navigation.navigate(\"InformacoesVaga\", { vaga: vaga })\r\n              }\r\n            >\r\n              <Text style={styles.buttonText}>\r\n                Área: {vaga.area_vaga} - Empresa: {vaga.nome_vaga}\r\n              </Text>\r\n            </Pressable>\r\n          ))}\r\n        </View>\r\n      </ScrollView>\r\n\r\n      <Pressable style={styles.ButtonExcluiTudo} onPress={toggleModal}>\r\n        <Text style={styles.buttonText}>Excluir tudo</Text>\r\n      </Pressable>\r\n\r\n      <Pressable style={styles.addButton} onPress={botaoMais}>\r\n        <FontAwesome name=\"plus\" size={24} color=\"white\" />\r\n      </Pressable>\r\n\r\n      <Pressable style={styles.updateButton} onPress={atualizarVagas}>\r\n        <FontAwesome name=\"refresh\" size={24} color=\"white\" />\r\n      </Pressable>\r\n\r\n      <Modal\r\n        animationType=\"slide\"\r\n        transparent={true}\r\n        visible={modalVisible}\r\n        onRequestClose={() => {\r\n          setModalVisible(!modalVisible);\r\n        }}\r\n      >\r\n        <View style={styles.centeredView}>\r\n          <View style={styles.modalView}>\r\n            <Text style={styles.modalText}>Confirma a exclusão?</Text>\r\n            <View style={styles.buttonsContainer}>\r\n              <Pressable style={[styles.botoesModalCancelar]} onPress={toggleModal}>\r\n                <Text style={styles.texto}>Cancelar</Text>\r\n              </Pressable>\r\n              <Pressable style={[styles.botoesModalConfirmar]} onPress={excluiTudo}>\r\n                <Text style={styles.texto}>Confirmar</Text>\r\n              </Pressable>\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#E8E8E8\",\r\n    padding: 20,\r\n  },\r\n  header: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginBottom: 20,\r\n  },\r\n  backButton: {\r\n    marginTop: 40,\r\n    marginRight: 10,\r\n  },\r\n  headerTitle: {\r\n    textAlign: \"center\",\r\n    color: \"black\",\r\n    fontSize: 25,\r\n    fontWeight: \"bold\",\r\n  },\r\n  scrollContainer: {\r\n    flexGrow: 1,\r\n  },\r\n  Buttons: {\r\n    borderRadius: 10,\r\n    alignItems: \"center\",\r\n    marginTop: 20,\r\n  },\r\n  ButtonVagas: {\r\n    backgroundColor: \"#ff0000\",\r\n    padding: 20,\r\n    marginBottom: 10,\r\n    alignItems: \"center\",\r\n    width: \"80%\",\r\n  },\r\n  ButtonExcluiTudo: {\r\n    position: \"absolute\",\r\n    bottom: 20,\r\n    left: 20,\r\n    backgroundColor: \"black\",\r\n    width: 150,\r\n    height: 50,\r\n    borderRadius: 25,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  buttonText: {\r\n    color: \"#fff\",\r\n    fontSize:RFValue (14),\r\n    fontWeight: \"bold\",\r\n  },\r\n  addButton: {\r\n    position: \"absolute\",\r\n    bottom: 20,\r\n    right: 20,\r\n    backgroundColor: \"black\",\r\n    width: 50,\r\n    height: 50,\r\n    borderRadius: 25,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  updateButton: {\r\n    position: \"absolute\",\r\n    bottom: 20,\r\n    right: 90,\r\n    backgroundColor: \"black\",\r\n    width: 50,\r\n    height: 50,\r\n    borderRadius: 25,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  centeredView: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop: 22,\r\n  },\r\n  modalView: {\r\n    margin: 20,\r\n    backgroundColor: \"white\",\r\n    borderWidth: 2,\r\n    borderRadius: 20,\r\n    padding: 35,\r\n    alignItems: \"center\",\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 4,\r\n    elevation: 5,\r\n  },\r\n  modalText: {\r\n    marginBottom: 15,\r\n    textAlign: \"center\",\r\n    color: \"red\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  buttonsContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-around\",\r\n    width: \"100%\",\r\n  },\r\n  botoesModalCancelar: {\r\n    borderRadius: 10,\r\n    backgroundColor: \"#4287f5\",\r\n    alignItems: 'center',\r\n    margin: 5,\r\n  },\r\n  botoesModalConfirmar: {\r\n    margin: 5,\r\n    borderRadius: 10,\r\n    backgroundColor: \"red\",\r\n    alignItems: 'center',\r\n  },\r\n  texto: {\r\n    padding: 7  ,\r\n    fontWeight: 'bold',\r\n    fontSize: RFValue(18),\r\n    color: 'white',\r\n  },\r\n\r\n});\r\n\r\nexport default TelaVagas;\r\n"
        }
    ]
}