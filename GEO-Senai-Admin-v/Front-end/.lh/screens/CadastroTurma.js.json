{
    "sourceFile": "screens/CadastroTurma.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1717781641864,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1717781649894,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n // Tela que permite ao administrador cadastrar novas turmas no GEO SENAI\r\n \r\n-import React, { useState } from \"react\";\r\n+import React, { useState } from 'react'\r\n import {\r\n   View,\r\n   TextInput,\r\n   Pressable,\r\n@@ -10,34 +10,34 @@\n   Text,\r\n   Image,\r\n   KeyboardAvoidingView,\r\n   Platform,\r\n-} from \"react-native\";\r\n-import { FontAwesome } from \"@expo/vector-icons\"; // Importe o ícone FontAwesome da biblioteca\r\n-import { ScrollView } from \"react-native-gesture-handler\";\r\n-import { RFValue } from \"react-native-responsive-fontsize\";\r\n+} from 'react-native'\r\n+import { FontAwesome } from '@expo/vector-icons' // Importe o ícone FontAwesome da biblioteca\r\n+import { ScrollView } from 'react-native-gesture-handler'\r\n+import { RFValue } from 'react-native-responsive-fontsize'\r\n \r\n const CadastroTurma = ({ navigation }) => {\r\n-  const [codigoTurma, setCodigoTurma] = useState(\"\");\r\n-  const [nomeCurso, setNomeCurso] = useState(\"\");\r\n-  const [salaTurma, setSalaTurma] = useState(\"\");\r\n-  const [duracaoCurso, setDuracaoCurso] = useState(\"\");\r\n-  const [descricaoCurso, setDescricaoCurso] = useState(\"\");\r\n+  const [codigoTurma, setCodigoTurma] = useState('')\r\n+  const [nomeCurso, setNomeCurso] = useState('')\r\n+  const [salaTurma, setSalaTurma] = useState('')\r\n+  const [duracaoCurso, setDuracaoCurso] = useState('')\r\n+  const [descricaoCurso, setDescricaoCurso] = useState('')\r\n \r\n-  const local = \"http://10.110.12.19:8080/turmas/nova-turma\";\r\n-  const nuvem = \"https://appbackend1.azurewebsites.net/turmas/nova-turma\";\r\n+  const local = 'http://10.110.12.19:8080/turmas/nova-turma'\r\n+  const nuvem = 'https://appbackend1.azurewebsites.net/turmas/nova-turma'\r\n \r\n   const enviarDados = () => {\r\n     // Valide os campos, se necessário\r\n     if (\r\n-      codigoTurma.trim() === \"\" ||\r\n-      nomeCurso.trim() === \"\" ||\r\n-      salaTurma.trim() === \"\" ||\r\n-      duracaoCurso.trim() === \"\" ||\r\n-      descricaoCurso.trim() === \"\"\r\n+      codigoTurma.trim() === '' ||\r\n+      nomeCurso.trim() === '' ||\r\n+      salaTurma.trim() === '' ||\r\n+      duracaoCurso.trim() === '' ||\r\n+      descricaoCurso.trim() === ''\r\n     ) {\r\n-      Alert.alert(\"Erro\", \"Por favor, preencha todos os campos\");\r\n-      return;\r\n+      Alert.alert('Erro', 'Por favor, preencha todos os campos')\r\n+      return\r\n     }\r\n \r\n     // Criar objeto turma com os dados\r\n     const novaTurma = {\r\n@@ -45,105 +45,109 @@\n       nome_curso: nomeCurso,\r\n       sala_turma: salaTurma,\r\n       duracao_curso: duracaoCurso,\r\n       desc_curso: descricaoCurso,\r\n-    };\r\n+    }\r\n \r\n     // Enviar os dados para o back-end\r\n     fetch(nuvem, {\r\n-      method: \"POST\",\r\n+      method: 'POST',\r\n       headers: {\r\n-        \"Content-Type\": \"application/json\",\r\n+        'Content-Type': 'application/json',\r\n       },\r\n       body: JSON.stringify(novaTurma),\r\n     })\r\n       .then((response) => {\r\n         if (response.ok) {\r\n           // Turma adicionada com sucesso, fazer algo, se necessário\r\n-          Alert.alert(\"Sucesso\", \"Turma adicionada com sucesso. Por favor atualize a tela de turmas para vizualizar as alterações.\");\r\n-          navigation.navigate(\"TelaTurmas\"); // Navega para a tela de turmas após adicionar a turma\r\n+          Alert.alert(\r\n+            'Sucesso',\r\n+            'Turma adicionada com sucesso. Por favor atualize a tela de turmas para vizualizar as alterações.'\r\n+          )\r\n+          navigation.navigate('TelaTurmas') // Navega para a tela de turmas após adicionar a turma\r\n         } else {\r\n-          throw new Error(\"Erro ao adicionar turma\");\r\n+          throw new Error('Erro ao adicionar turma')\r\n         }\r\n       })\r\n       .catch((error) => {\r\n-        console.error(\"Erro ao adicionar turma:\", error);\r\n+        console.error('Erro ao adicionar turma:', error)\r\n         Alert.alert(\r\n-          \"Erro\",\r\n-          \"Erro ao adicionar turma. Por favor, tente novamente mais tarde.\"\r\n-        );\r\n-      });\r\n-  };\r\n+          'Erro',\r\n+          'Erro ao adicionar turma. Por favor, tente novamente mais tarde.'\r\n+        )\r\n+      })\r\n+  }\r\n \r\n   return (\r\n     <KeyboardAvoidingView\r\n       style={styles.container}\r\n-      behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\r\n+      behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\r\n     >\r\n-     <ScrollView contentContainerStyle={styles.scrollViewContent}>\r\n-      <Pressable onPress={() => navigation.goBack()} style={{ marginTop: 40 }}>\r\n-      <Image\r\n-          source={require('./../assets/icons/users-solid.png')}\r\n-          style={{ width: 30, height: 30 }}\r\n-        />\r\n-      </Pressable>\r\n+      <ScrollView contentContainerStyle={styles.scrollViewContent}>\r\n+        <Pressable\r\n+          onPress={() => navigation.goBack()}\r\n+          style={{ marginTop: 40 }}\r\n+        >\r\n+          <Image\r\n+            source={require('./../assets/icons/arrow-left-solid.png')}\r\n+            style={{ width: 30, height: 30 }}\r\n+          />\r\n+        </Pressable>\r\n \r\n-      <View style={styles.header} />\r\n-      <View style={styles.containerForm}>\r\n-        <Text style={styles.headerText}>Cadastro de Turma</Text>\r\n-        <TextInput\r\n-          style={styles.input}\r\n-          placeholder=\"Código da Turma\"\r\n-          placeholderTextColor=\"gray\"\r\n-          value={codigoTurma}\r\n-          onChangeText={(text) => setCodigoTurma(text)}\r\n-        />\r\n-        <TextInput\r\n-          style={styles.input}\r\n-          placeholder=\"Nome do Curso\"\r\n-          placeholderTextColor=\"gray\"\r\n-          value={nomeCurso}\r\n-          onChangeText={(text) => setNomeCurso(text)}\r\n-        />\r\n-        <TextInput\r\n-          style={styles.input}\r\n-          placeholder=\"Sala\"\r\n-          placeholderTextColor=\"gray\"\r\n-          value={salaTurma}\r\n-          onChangeText={(text) => setSalaTurma(text)}\r\n-        />\r\n-        <TextInput\r\n-          style={styles.input}\r\n-          placeholder=\"Duração do Curso\"\r\n-          placeholderTextColor=\"gray\"\r\n-          value={duracaoCurso}\r\n-          onChangeText={(text) => setDuracaoCurso(text)}\r\n-        />\r\n-        <TextInput\r\n-          style={[styles.input, styles.textArea]}\r\n-          placeholder=\"Descrição do Curso\"\r\n-          placeholderTextColor=\"gray\"\r\n-          multiline\r\n-          numberOfLines={4}\r\n-          value={descricaoCurso}\r\n-          onChangeText={(text) => setDescricaoCurso(text)}\r\n-        />\r\n-        <View style={styles.containerBtnForm}>\r\n-\r\n-          <Pressable style={styles.button} onPress={enviarDados}>\r\n-            <Text style={styles.buttonText}>Salvar</Text>\r\n-          </Pressable>\r\n-\r\n+        <View style={styles.header} />\r\n+        <View style={styles.containerForm}>\r\n+          <Text style={styles.headerText}>Cadastro de Turma</Text>\r\n+          <TextInput\r\n+            style={styles.input}\r\n+            placeholder=\"Código da Turma\"\r\n+            placeholderTextColor=\"gray\"\r\n+            value={codigoTurma}\r\n+            onChangeText={(text) => setCodigoTurma(text)}\r\n+          />\r\n+          <TextInput\r\n+            style={styles.input}\r\n+            placeholder=\"Nome do Curso\"\r\n+            placeholderTextColor=\"gray\"\r\n+            value={nomeCurso}\r\n+            onChangeText={(text) => setNomeCurso(text)}\r\n+          />\r\n+          <TextInput\r\n+            style={styles.input}\r\n+            placeholder=\"Sala\"\r\n+            placeholderTextColor=\"gray\"\r\n+            value={salaTurma}\r\n+            onChangeText={(text) => setSalaTurma(text)}\r\n+          />\r\n+          <TextInput\r\n+            style={styles.input}\r\n+            placeholder=\"Duração do Curso\"\r\n+            placeholderTextColor=\"gray\"\r\n+            value={duracaoCurso}\r\n+            onChangeText={(text) => setDuracaoCurso(text)}\r\n+          />\r\n+          <TextInput\r\n+            style={[styles.input, styles.textArea]}\r\n+            placeholder=\"Descrição do Curso\"\r\n+            placeholderTextColor=\"gray\"\r\n+            multiline\r\n+            numberOfLines={4}\r\n+            value={descricaoCurso}\r\n+            onChangeText={(text) => setDescricaoCurso(text)}\r\n+          />\r\n+          <View style={styles.containerBtnForm}>\r\n+            <Pressable style={styles.button} onPress={enviarDados}>\r\n+              <Text style={styles.buttonText}>Salvar</Text>\r\n+            </Pressable>\r\n+          </View>\r\n         </View>\r\n-      </View>\r\n-      </ScrollView> \r\n+      </ScrollView>\r\n     </KeyboardAvoidingView>\r\n-  );\r\n-};\r\n+  )\r\n+}\r\n \r\n const styles = StyleSheet.create({\r\n   container: {\r\n-    backgroundColor: \"#E8E8E8\",\r\n+    backgroundColor: '#E8E8E8',\r\n     flex: 1,\r\n     padding: 20,\r\n   },\r\n   scrollViewContent: {\r\n@@ -151,17 +155,17 @@\n   },\r\n   containerForm: {\r\n     padding: 10,\r\n     borderRadius: 10,\r\n-    backgroundColor: \"#ffffff\",\r\n+    backgroundColor: '#ffffff',\r\n   },\r\n   containerBtnForm: {\r\n     flexWrap: 'rowrap',\r\n-    alignItems: \"flex-end\",\r\n-   },\r\n+    alignItems: 'flex-end',\r\n+  },\r\n   input: {\r\n     height: 40,\r\n-    borderColor: \"#E8E8E8\", // Cor da borda\r\n+    borderColor: '#E8E8E8', // Cor da borda\r\n     borderWidth: 2, // Largura da borda\r\n     borderRadius: 8, // Raio da borda\r\n     marginBottom: 10,\r\n     paddingHorizontal: 10,\r\n@@ -169,34 +173,34 @@\n   textArea: {\r\n     height: 100,\r\n   },\r\n   button: {\r\n-    backgroundColor: \"#ff0000\",\r\n+    backgroundColor: '#ff0000',\r\n     borderRadius: 10,\r\n-    alignItems: \"center\",\r\n+    alignItems: 'center',\r\n     // alignSelf: \"flex-end\",\r\n     // marginHorizontal: \"50%\",\r\n   },\r\n   buttonText: {\r\n-    color: \"#fff\",\r\n+    color: '#fff',\r\n     fontSize: RFValue(16),\r\n-    fontWeight: \"bold\",\r\n-    padding: 10\r\n+    fontWeight: 'bold',\r\n+    padding: 10,\r\n   },\r\n   header: {\r\n-    flexDirection: \"row\",\r\n-    alignItems: \"center\",\r\n+    flexDirection: 'row',\r\n+    alignItems: 'center',\r\n     marginBottom: 20,\r\n   },\r\n   headerText: {\r\n     fontSize: RFValue(20),\r\n-    fontWeight: \"bold\",\r\n+    fontWeight: 'bold',\r\n     marginBottom: 20,\r\n   },\r\n   seta: {\r\n     width: 30,\r\n     height: 30,\r\n     marginRight: 10,\r\n   },\r\n-});\r\n+})\r\n \r\n-export default CadastroTurma;\r\n+export default CadastroTurma\r\n"
                }
            ],
            "date": 1717781641864,
            "name": "Commit-0",
            "content": "// Tela que permite ao administrador cadastrar novas turmas no GEO SENAI\r\n\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  View,\r\n  TextInput,\r\n  Pressable,\r\n  Alert,\r\n  StyleSheet,\r\n  Text,\r\n  Image,\r\n  KeyboardAvoidingView,\r\n  Platform,\r\n} from \"react-native\";\r\nimport { FontAwesome } from \"@expo/vector-icons\"; // Importe o ícone FontAwesome da biblioteca\r\nimport { ScrollView } from \"react-native-gesture-handler\";\r\nimport { RFValue } from \"react-native-responsive-fontsize\";\r\n\r\nconst CadastroTurma = ({ navigation }) => {\r\n  const [codigoTurma, setCodigoTurma] = useState(\"\");\r\n  const [nomeCurso, setNomeCurso] = useState(\"\");\r\n  const [salaTurma, setSalaTurma] = useState(\"\");\r\n  const [duracaoCurso, setDuracaoCurso] = useState(\"\");\r\n  const [descricaoCurso, setDescricaoCurso] = useState(\"\");\r\n\r\n  const local = \"http://10.110.12.19:8080/turmas/nova-turma\";\r\n  const nuvem = \"https://appbackend1.azurewebsites.net/turmas/nova-turma\";\r\n\r\n  const enviarDados = () => {\r\n    // Valide os campos, se necessário\r\n    if (\r\n      codigoTurma.trim() === \"\" ||\r\n      nomeCurso.trim() === \"\" ||\r\n      salaTurma.trim() === \"\" ||\r\n      duracaoCurso.trim() === \"\" ||\r\n      descricaoCurso.trim() === \"\"\r\n    ) {\r\n      Alert.alert(\"Erro\", \"Por favor, preencha todos os campos\");\r\n      return;\r\n    }\r\n\r\n    // Criar objeto turma com os dados\r\n    const novaTurma = {\r\n      codigo_turma: codigoTurma,\r\n      nome_curso: nomeCurso,\r\n      sala_turma: salaTurma,\r\n      duracao_curso: duracaoCurso,\r\n      desc_curso: descricaoCurso,\r\n    };\r\n\r\n    // Enviar os dados para o back-end\r\n    fetch(nuvem, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(novaTurma),\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          // Turma adicionada com sucesso, fazer algo, se necessário\r\n          Alert.alert(\"Sucesso\", \"Turma adicionada com sucesso. Por favor atualize a tela de turmas para vizualizar as alterações.\");\r\n          navigation.navigate(\"TelaTurmas\"); // Navega para a tela de turmas após adicionar a turma\r\n        } else {\r\n          throw new Error(\"Erro ao adicionar turma\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Erro ao adicionar turma:\", error);\r\n        Alert.alert(\r\n          \"Erro\",\r\n          \"Erro ao adicionar turma. Por favor, tente novamente mais tarde.\"\r\n        );\r\n      });\r\n  };\r\n\r\n  return (\r\n    <KeyboardAvoidingView\r\n      style={styles.container}\r\n      behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\r\n    >\r\n     <ScrollView contentContainerStyle={styles.scrollViewContent}>\r\n      <Pressable onPress={() => navigation.goBack()} style={{ marginTop: 40 }}>\r\n      <Image\r\n          source={require('./../assets/icons/users-solid.png')}\r\n          style={{ width: 30, height: 30 }}\r\n        />\r\n      </Pressable>\r\n\r\n      <View style={styles.header} />\r\n      <View style={styles.containerForm}>\r\n        <Text style={styles.headerText}>Cadastro de Turma</Text>\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Código da Turma\"\r\n          placeholderTextColor=\"gray\"\r\n          value={codigoTurma}\r\n          onChangeText={(text) => setCodigoTurma(text)}\r\n        />\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Nome do Curso\"\r\n          placeholderTextColor=\"gray\"\r\n          value={nomeCurso}\r\n          onChangeText={(text) => setNomeCurso(text)}\r\n        />\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Sala\"\r\n          placeholderTextColor=\"gray\"\r\n          value={salaTurma}\r\n          onChangeText={(text) => setSalaTurma(text)}\r\n        />\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Duração do Curso\"\r\n          placeholderTextColor=\"gray\"\r\n          value={duracaoCurso}\r\n          onChangeText={(text) => setDuracaoCurso(text)}\r\n        />\r\n        <TextInput\r\n          style={[styles.input, styles.textArea]}\r\n          placeholder=\"Descrição do Curso\"\r\n          placeholderTextColor=\"gray\"\r\n          multiline\r\n          numberOfLines={4}\r\n          value={descricaoCurso}\r\n          onChangeText={(text) => setDescricaoCurso(text)}\r\n        />\r\n        <View style={styles.containerBtnForm}>\r\n\r\n          <Pressable style={styles.button} onPress={enviarDados}>\r\n            <Text style={styles.buttonText}>Salvar</Text>\r\n          </Pressable>\r\n\r\n        </View>\r\n      </View>\r\n      </ScrollView> \r\n    </KeyboardAvoidingView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: \"#E8E8E8\",\r\n    flex: 1,\r\n    padding: 20,\r\n  },\r\n  scrollViewContent: {\r\n    flexGrow: 1,\r\n  },\r\n  containerForm: {\r\n    padding: 10,\r\n    borderRadius: 10,\r\n    backgroundColor: \"#ffffff\",\r\n  },\r\n  containerBtnForm: {\r\n    flexWrap: 'rowrap',\r\n    alignItems: \"flex-end\",\r\n   },\r\n  input: {\r\n    height: 40,\r\n    borderColor: \"#E8E8E8\", // Cor da borda\r\n    borderWidth: 2, // Largura da borda\r\n    borderRadius: 8, // Raio da borda\r\n    marginBottom: 10,\r\n    paddingHorizontal: 10,\r\n  },\r\n  textArea: {\r\n    height: 100,\r\n  },\r\n  button: {\r\n    backgroundColor: \"#ff0000\",\r\n    borderRadius: 10,\r\n    alignItems: \"center\",\r\n    // alignSelf: \"flex-end\",\r\n    // marginHorizontal: \"50%\",\r\n  },\r\n  buttonText: {\r\n    color: \"#fff\",\r\n    fontSize: RFValue(16),\r\n    fontWeight: \"bold\",\r\n    padding: 10\r\n  },\r\n  header: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginBottom: 20,\r\n  },\r\n  headerText: {\r\n    fontSize: RFValue(20),\r\n    fontWeight: \"bold\",\r\n    marginBottom: 20,\r\n  },\r\n  seta: {\r\n    width: 30,\r\n    height: 30,\r\n    marginRight: 10,\r\n  },\r\n});\r\n\r\nexport default CadastroTurma;\r\n"
        }
    ]
}